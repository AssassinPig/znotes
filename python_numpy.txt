python numpy
0.http://www.numpy.org/
	NumPy为Python提供了快速的多维数组处理的能力，而SciPy则在NumPy基础上添加了众多的科学
	计算所需的各种工具包，有了这两个库，Python就有几乎和Matlab一样的处理数据和计算的能力了
	SciPy中的核心计算部分都是久经考验的库:
	线性代数使用的LAPACK库
	快速傅立叶变换使用的FFTPACK库
	常微分方程求解使用的ODEPACK库
	非线性方程组求解及最小值求解使用的MINPACK库

	from numpy import *

1. NumPy提供了两种基本对象
	在NumPy中维度(dimensions)叫做轴(axes), 轴的个数叫做秩(rank).

	ndarray(N-dimensional array object)	存储单一数据类型的多维数组
	ufunc(universal function object)	对数组进行处理的函数

	narray的操作函数
	array([ [1,2,3],[4,5,6],[7,8,9] ])  构造
	array([1,2], dtype=complex)			构造的时候指定数据类型

	array.dtype		每个元素的数据类型
	array.ndim  	轴的个数， 在python世界之中，轴被称为秩
	array.shape 	数组的维度
	array.itemsize 	数组中每个元素的字节大小
	array.sum()		求和		
	array.sum(axis=0)	求第0号坐标轴上的和
	array.min()		求最小元素
	array.min(axis=..)
	array.max()		求最大元素
	array.max(axis=..)
	array.reshape(2,3,4) 生成一个2*3*4的矩阵

	zeros((3,4)) 	创建一个元素都是0的3*4的矩阵
	ones((2,3,4), dtype=int16)	创建一个元素类型是int16 值都是1的 2*3*4维的矩阵

	empty((2,3))	创建一个内容随机的narray数组
	arange(10, 30, 5)	创建一个数组，元素的值从10开始不超过30，步长为5
	arange(0, 2, 0.3)	步长为0.3

	array.fromstring(s, dtype=int8) 从s字符串中创建数组
	
	def func(i):
		return i*4 + 1
	array.fromfunction(func, (10,)) 从func中创建数组，10个元素维数为一
	
	def func2(i,j):
		return (i+1) * (j+1)
	array.fromfunction(func2, (9,9)) 从func2中创建数组，9*9的数组

	random.random((3,3))	随机生成一个3*3的数组

	shape manipulation
	a = floor(10*random.random((3,4)))
	a.shape
	a.ravel				# flaten the array
	a.shape = (6,2)
	a.transpose()		#转置

	a.resize((2,6))

	a.reshape(3,-1)

2. 基本运算
	exp(x)		自然数e的x次方 
				如果x是矩阵或数组则是要对其中每一个元素求e的次方
	sqrt(x)		同上
	add(b,c)	b和c中的元素对应相加

3. matrix矩阵
	mat() 		使用mat()函数来把数组转换成矩阵
	randMat = mat(random.rand(4,4))

	randMat.I 	使用.I获得逆矩阵
	eye(4)		生成一个单位矩阵(对角线元素为1)
	matrix.tranpose() 获得转秩矩阵

	shape(mat)			获得矩阵的维数

