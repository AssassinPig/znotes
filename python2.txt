print 'hello, %s' % 'name'
>>>hello, name

__str__特殊方法
给一个类添加__str__方法，可以在使用print方法打印这个类实例的时候，输出相应的__str__方法返回的内容
__unicode__ 同__str__ 

常见异常和错误
AttributeError	属性错误 特性引用和赋值失败时候引发的属性错误
NameError		试图访问的变量名不存在
SyntaxError		语法错误
Exception		所有异常基类
IOError			一般常见于打不开存在文件时候
KeyError		使用了映射中弄个不存在的关键字(键)
IndexError		索引错误 使用的索引不存在或者超出序列范围
TypeError		类型错误 内建操作或是函数应用于错误的对象时引发类型错误
ZeroDivisonError 除数为零
ValueError      值错误，给对象的参数类型不正确,例如给int()函数传入了字符串类型


序列包
scoundrel = {'name':'Robin', 'girlfriend':'Marion'}
key, value = scoundrel.popitem()
key
value

布尔值
False None 0 "" () [] {}
以上都被看做是False

x is y		x和y同对象
x is not y  x和y不同对象
x in y		x在y容器之中
x not in y	x不在y容器之中

x == y		判断xy的值是否相等 包括list等
x is y		判断xy是否是一个对象

断言
if not condition:
	crash program
	
if xxx :
else if xxx:
	xxxx
else :
	xxxx
	
while xxxx:
	xxxx
	
words = ['this', 'is', 'a', 'array]
for w in words:
	print w

numbers = [0,1,2,3,4,5,6,7,8,9]
for n in numbers:
	print n

整数数组可以使用range直接来打印一段数字
for n in range(1,10):
	print n
	
循环遍历字典
d={}
for key in d:
	print key , d[key]
	
for key, value in d.items():
	print key , value

并行迭代
names = ['a', 'b', 'c']
ages = [1, 2, 3]
for i in range(len(names)):
	print names[i] , age[i]
	
zip(names, ages)
>>>[('a',1), ('b',2), ('c',3)]
可以针对不定长的两个数组，只出合并处理到最短长度

编号迭代
index = 0
for string in strings:
	if 'xxx' in string:
		string[index] = '[censdxxx]'
index += 1

fro index, string in enumerate(strings):
	if 'xxx' in string:
	strings[index] = '[sxdsds]'
	
排序和反转
sorted([])
reversed('xxxxx') 返回数组

continue
break

pass	什么都不做，相当于跳过

del 删除的是名称，如果x={xxx} y=x 则del a in x不会影响到y中x的值，因为删除的是名称而不是值，python会在特殊的时候删除掉这个值，即python自己进行内存管理

exec "xxxx" 执行xxxx内容的脚本
eval "xxxx" 计算xxxx内容的脚本返回的值

python import搜索目录
使用命令查看
import sys
sys.path

常用模块和类的用法
dir()方法
查询对象的属性和方法
dir([]) 查询list方法
dir('') 查询字符串
import(sys)
dir(sys)  查询模块方法

python基本类型 内置
int
bool True False
str  ''  ""
list  []
tuple ('d', 100)
dict {'name':'cc', 'country':'china'}

可变数据类型list dict
不可变数据类型int str tuple

type()函数
查看对象的类型信息
type(1) 
<type 'int'>
type('')
<type 'str'>
type(type(1))	type()的返回值也是有类型的，它是type类型
<type 'type'>	

help()函数
查看函数或者模块用途的具体说明
help('sys')
help('str')
a=[1,2,3]
help(a)
help(a.append)

global变量
x=6
def func():
	global x
	x=1
func()
print
1
可以看出在func中使用global x 可以指示要操作的x是一个全局变量
