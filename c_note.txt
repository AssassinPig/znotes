1. 内存分配函数 malloc realloc calloc
	三个函数的申明分别是: 
	void* realloc(void* ptr, unsigned newsize); 
	void* malloc(unsigned size); 
	void* calloc(size_t numElements, size_t sizeOfElement); 
	都在stdlib.h函数库内
	它们的返回值都是请求系统分配的地址,如果请求失败就返回NULL 

	malloc用于申请一段新的地址,参数size为需要内存空间的长度,如: 
	char* p; 
	p=(char*)malloc(20);

	calloc与malloc相似,参数sizeOfElement为申请地址的单位元素长度,numElements为元素个数,如: 
	char* p; 
	p=(char*)calloc(20,sizeof(char)); 
	这个例子与上一个效果相同

	realloc是给一个已经分配了地址的指针重新分配空间,参数ptr为原有的空间地址,newsize是重新申请的地址长度 
	如: 
	char* p; 
	p=(char*)malloc(sizeof(char)*20); 
	p=(char*)realloc(p,sizeof(char)*40);
	注意，这里的空间长度都是以字节为单位。 

	C语言的标准内存分配函数：malloc，calloc，realloc，free等。 
	malloc与calloc的区别为1块与n块的区别： 
	malloc调用形式为(类型*)malloc(size)：在内存的动态存储区中分配一块长度为“size”字节的连续区域，返回该区域的首地址。 
	calloc调用形式为(类型*)calloc(n，size)：在内存的动态存储区中分配n块长度为“size”字节的连续区域，返回首地址。 
	realloc调用形式为(类型*)realloc(*ptr，size)：将ptr内存大小增大到size。 

2. 内存释放函数free
	free的调用形式为free(void*ptr)：释放ptr所指向的一块内存空间。 
	C++中为new/delete函数。

3. 计时函数clock() 程序运行时间
	如果想获取此时时刻,可以使用clock(), 但是不要直接使用clock()的返回值, 而是clock()/CLOCKS_PER_SEC, 其中CLOCKS_PER_SEC是一个与操作系统相关的常数

	如果想获取某段程序的运行时间，可以记录两次时刻，然后求差值的方法。值得一提的是如果有等待键盘输入的操作，那可以使用管道的方法，把参数传递给程序，如在windows之中可以使用echo 20 | abc.exe, 将参数20通过管道的方法传递给abc.exe程序

4. scanf()函数
	scanf函数的返回值
	返回的是成功输入的变量个数
	当输入结束的时候 scanf无法再次读取x, 将返回0

	输入格式 空格,TAB和回车符都是无关紧要的 在windows下先按enter然后ctrl+z 然后再Enter，即可结束输入
	在linux下 输入完毕后按ctrl+D键即可结束输入

5. 指针
	int *p; 普通指针
	int **p; 二维指针 指针的指针
	int *p[];	指针数组
	int (*p)[]; 数组指针  注意() 它代表着优先解析(*p)其中的*p 即表明这个核心本质是*p 一个指针

	int (*p)(); 函数指针
