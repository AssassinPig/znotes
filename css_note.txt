##css学习
0. 教程 & 资源
	[1](http://www.w3school.com.cn/html/html_layout.asp)
	[2](http://www.aa25.cn/special/10day/index.shtml)
	[3](www.stylegala.com/features/bulletmadness)

1. 连接到外部css
	```
	<head>
	<link rel="stylesheet" type="text/css" href="mystyle.css">
	</head>
	```

2. css样式种类:
	1. 外部样式
		```
		<link href="layout.css" rel="stylesheet" type="text/css" />
		```
	2. 内部样式
		```
		<style>
		h2 { color:#f00;}
		</style>
		```
3. 行内样式 & 导入样式
	```
		@import url("/css/global.css");
	```
	可在一般的样式css文件中导入全局样式css文件

4. css优先级
	1. id优先级高于class
	2. 后面的样式覆盖前面的
	3. 指定的高于继承
	4. 行内样式高于内部或外部样式
	总结：单一的(id)高于共用的(class)，有指定的用指定的，无指定则继承离它最近的

5. css盒模型
	[1](http://www.aa25.cn/div_css/902.shtml)
	[2](http://www.w3school.com.cn/css/css_boxmodel.asp)

	1. css的块级元素和内联元素
		1. 块级元素
			1. div像方块一样，默认占用一行 
			2. 高度，行高以及顶和底边距都可控制
			3. 宽度缺省是它的容器的100%，除非设定一个宽度
			4. 常见块级元素 
				p 
				pre	格式化文本
				h1..h6
				ul ol li
				table form
				div 
				body
				address 
				blockquote 
				center 
				dir 
				fieldset
				menu 
				noframes - frames

		2. 内联元素inline
			1. span 不会引起换行
			2. 高，行高及顶和底边距不可改变
			3. 宽度就是它的文字或图片的宽度，不可改变
			4. 常见内联元素
				input
				a
				img
				span
				br 
				em 
				input 
				label
				textarea 
				sub sup  	上下标
				textarea 
				u 			下划线
				strike 		中划线
				small 		小文本字体
				strong 		粗体强调
				code   		引用代码
				i   		斜体


		3. 在css中设置 
			1. display:inline 
			2. display:block

		4. div和span
			div就是一个块，他意味着前后都要空一行
			而span则可以嵌套，成为内敛的一部分
			

6. margin 的垂直合并
	当两个元素在垂直方向上都设置了margin的时候,他们会合并,取最大值
	父子元素在垂直和水平方向上也会合并并取最大值

7. css元素的定位positioning
	1. css的定位机制
		1. 普通流
		2. 浮动
		3. 绝对定位
			这个属性定义建立元素布局所用的定位机制。任何元素都可以定位，不过绝对或固定元素会生成一个块级框，而不论该元素本身是什么类型。相对定位元素会相对于它在正常流中的默认位置偏移。
			
		absolute	
		生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。
		元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定。
		fixed	
		生成绝对定位的元素，相对于浏览器窗口进行定位。
		元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定。
		relative	
		生成相对定位的元素，相对于其正常位置进行定位。
		因此，"left:20" 会向元素的 LEFT 位置添加 20 像素。
		static	默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声明）。
		inherit	规定应该从父元素继承 position 属性的值。

	
	2. 在css文件中使用float属性设置
		1. float: left/right
	3. 在float流中使用clear clearfix
		1. clear:left/right/both
			表示在该标签元素左边/右边/两边没有浮动元素
		2. clear:both
		[具体例子的讲解](http://www.cnblogs.com/dolphinX/p/3508869.html)

	4. 水平居中
		1.使用margin属性
			```
				margin: xxx auto;
			```
			或者
			```
				margin-left: auto;
				margin-right: auto;
			```

		2. 使用left 随后使用margin-left拉回中间位置
			```
				left:50%;
				margin-left: -25%;//或者写子元素的像素
			```

8. 选择器
	1. 派生选择器
		```
		li strong {xxx}
		```
		表示li标签中strong标签的样色
	2. id选择器	
		1. 例子1
		```
		#siderbar {
			xxxx
		}
		<div id="siderbar"></div> 的样式
		```
		2. 例子2
		```
		#siderbar p{xxx}
		<div id="sidebar"><p></p></div>的样式
		```
	3. 类选择器
		1. 例子1
			```
			.center {xxxx}
			<xxx class="center"> 的样式
			```
		2. 例子2
			```
			.fancy td{xxxx} 
			<td class="fancy">的样式
			```
	
	4. 属性选择器
		1. 例子1
			指定带有title属性的标签的样式
			```
			[title]
			{
				color:red; 
			}
			```
		2. 例子2
			指定title属性为xxx的样式
			```
				[title=W3CShool]
				{
					border:xxxxx
				}
			```
		3. 其他例子
			```	
				[title=value]
				[title~=value]
				[title|=value]
				[title^=value]
				[title$=value]
				[title*=value]
			```
9. 伪类
	```
	a:hover {xxx} 
	表示当<a>标签元素发生hover事件的时候应用的样式
	```

10. 边框背景
	1. 边框的简写
		```
			div {
				border-width: 1px;
				border-style: solid;
				border-color: #FF0000;
			}		

			div {
				border: 1px solid #FF0000;
			}

			border: border-with || border-style || border-color
		```

	2. 背景的简写
		```
			body {
				background: #FF0000 url(background.gif) no-repeat fixed 0 0;
			}
			background: background-color || background-image || background-repeat || background-attachment || background-position
			background-attachment 是否随页面滚动
			background-position 定义页面位置 必须先定义背景图片之后才有效
			
			默认值
			tansparent none repeat scroll 0% 0%
		```
11. 字体
	1. 例子
	```
	body {
		font-style:	italic;
		font-variant: small-caps;
		font-weight: bold;
		font-size: 12px;
		line-height: 140%;
		font-family: "Lucida Grande", sans-serif;
	}
	```
	2. font 简写
		font: 12px/1.5 Arial
		等于以下三行:	
		font-family:Arial;
		font-size:12px;
		line-height:1.5em;
	3. 各个属性的详解
		font-style设定斜体　如：font-style: italic;
		font-weight设定文字粗细　如：font-weight: bold;
		font-size设定文字大小　如：font-size: 12px;
		line-height设定行距　如：line-height: 150%;
		color设定文字颜色（注意不是font-color）　如：color: red;
		font-family设定字体　如：font-family : "Lucida Grande", Verdana, Lucida, Arial, Helvetica, 宋体,sans-serif;

	[字体参考](http://www.divcss5.com/rumen/r74.shtml)

12. z-index
	[参考文档](http://www.neoease.com/css-z-index-property-and-layering-tree/)
	1. W3C 对 z-index 属性的描述中提到 在 z-index 属性仅在节点的 position 属性为 relative, absolute 或者 fixed 时生效
	2. 

13. 使用css来截取显示的字符串
	1. 指定容器长度的
		```
			<div style="width:300px; overflow:hidden; text-overflow:ellipsis; white-space:nowrap;"> 任意长度的字符串 </div>
		```
	2. 自动截取
	```
	<input type=”text” style=”width:100%; cursor:default; border-width:0; border-style:none; background-color:transparent;” value=”任意长度的字符串” readonly/>
	```

	```
	div.test{

	width:200px;

	height:14px;

	overflow:hidden;

	white-space:nowrap;

	text-overflow:ellipsis;

	text-overflow: ellipsis;/* IE/Safari */

	-ms-text-overflow: ellipsis;

	-o-text-overflow: ellipsis;/* Opera */

	-moz-binding: url("ellipsis.xml#ellipsis");/*FireFox*/

	}
	```

	关键是text-overflow,其语法如下：
	text-overflow:clip | ellipsis
	clip：不显示省略标记(...)，而是简单的裁切
	ellipsis：当对象向内文本溢出时显示省略标记(...)

	white-space : normal | pre | nowrap

	[原文链接在此](http://www.cnblogs.com/meihua/articles/1943310.html)

	$('.td_p b').each(function(i, e){ console.log($(this).offsetWidth); });

	$(this).offsetWidth;

	$(this).parent().offsetWidth;